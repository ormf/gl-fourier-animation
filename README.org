#+LANGUAGE: de
#+OPTIONS: html5-fancy:t
#+OPTIONS: toc:nil
#+OPTIONS: tex:t
#+HTML_DOCTYPE: xhtml5
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/home/orm/.config/emacs/org-mode/ox-custom/css/org-manual-style.css" />
#+INFOJS_OPT: path:scripts/org-info-de.js
#+LATEX_CLASS_OPTIONS: [a4paper]
#+LATEX: \setlength\parindent{0pt}
#+LATEX_HEADER: \usepackage[top=0.5cm, left=2cm, bottom=0.5cm, right=2cm]{geometry}
#+LATEX_HEADER: \usepackage{fontspec} % For loading fonts
#+LATEX_HEADER: \defaultfontfeatures{Mapping=tex-text}
#+LATEX_HEADER: \setmainfont[Scale=0.9]{Calibri}
#+LATEX_HEADER: \setsansfont[Scale=0.9]{Calibri}[Scale=MatchLowercase]
#+LATEX_HEADER: \setmonofont[Scale=0.7]{DejaVu Sans Mono}[Scale=MatchLowercase]
#+TITLE: README.org


* Gl Fourier Animation
  Common Lisp framework for GL Animation and application of Fourier
  Resynthesis inspired by the YouTube videos of 3Blue1Brown. The whole
  port was done as a learning experience but has been successfully
  used in teaching the concepts of Fourier synthesis.

** License

   GNU gpl 2.0 or later (see License.txt).
   
** (c) Orm Finnendahl 2021

** Usage

   The patch has been written with sbcl and the sdl framework. Make
   sure OpenGL is running on the system before loading it.

   Look in the examples folder for usage examples.

#+BEGIN_SRC lisp
  (unless (find-package :gl-fourier-animation) (ql:quickload
  :gl-fourier-animation))

  (in-package :gl-fourier-animation)

  ;;; open gl window.

  (02-indexed-circles)

  ;;; The window should display the animation of drawing a eigth note
  ;;; symbol in the complex plane using the addition of rotating
  ;;; vectors.

  ;;; Use the <space> key to start/stop the animation

  ;;; Drag the mouse to rotate the image in 3D space (x/y are
  ;;; real/imaginary, z is time).  <Ctrl-mousewheel> zooms in/out.
  ;;; Use the number keys on your keyboard to switch between different
  ;;; "modes": 1 - The vectors of the fourier transform are added and
  ;;; their sum is drawn as a yellow line.

  ;;; 2 - All vectors are centered on the origin of the complex plane
  ;;;     and the z axis is the index of the fourier transform,
  ;;;     mirrored on z = 0 ("negative" indexes)
  ;;;
  ;;; 3 - Stationary representation of the fourier analysis with vectors
  ;;;     (the initial state of the animation). The z axis is the index of
  ;;;     the fourier transform.  4 - the same as 2 but with positive
  ;;;     indexes.

  #+END_SRC

   Also see the examples.lisp file for how to load different shapes and change their parameters.

